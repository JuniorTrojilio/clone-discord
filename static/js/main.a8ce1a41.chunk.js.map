{"version":3,"sources":["assets/logo.svg","components/layout/styles.ts","components/serverButton/styles.ts","components/serverButton/index.tsx","components/serverList/styles.ts","components/serverList/index.tsx","components/serverName/styles.ts","components/serverName/index.tsx","components/channelInfo/styles.ts","components/channelInfo/index.tsx","components/channelList/styles.ts","components/channelButton/styles.ts","components/channelButton/index.tsx","components/channelList/index.tsx","components/userInfo/styles.ts","components/userInfo/index.tsx","components/userList/styles.ts","components/userList/index.tsx","components/channelMessage/styles.ts","components/channelMessage/index.tsx","components/channelData/styles.ts","components/channelData/index.tsx","components/layout/index.tsx","styles/globalStyles.ts","App.tsx","index.tsx"],"names":["module","exports","Grid","styled","div","Button","ButtonProps","isHome","css","props","hasNotifications","mentions","ServerButton","selected","className","src","Logo","alt","Container","Separator","ServerList","Title","h1","ExpandedIcon","ExpandMore","ServerName","HashtagIcon","Hashtag","Description","span","ChannelInfo","Category","AddCategoryIcon","Add","InvitedIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadphoneoIcon","Headset","SettingIcon","UserInfo","Role","User","UserRow","nickName","isBot","UserList","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMention","Messages","InputWrapper","Input","input","InputIcon","AddCircle","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","ref","Array","from","keys","map","n","key","type","placeholder","Layout","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8ce1a41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4ab8569a.svg\";","import styled from 'styled-components';\n\nexport const Grid = styled.div`\n  display: grid;\n\n  grid-template-columns: 71px 240px auto 240px;\n  grid-template-rows: 46px auto 52px;\n\n  grid-template-areas: \n  'SL SN CI CI'\n  'SL CL CD UL'\n  'SL UI CD UL';\n\n  height: 100vh;\n`;\n","import styled, { css } from 'styled-components';\n\nimport { ButtonProps } from '.'\n\nexport const Button = styled.div<ButtonProps>`\n  display: flex;\n\n  align-items: center;\n  justify-content: center;\n  \n  flex-shrink: 0;\n\n  width: 48px;\n  height: 48px;\n\n  margin-bottom: 8px;\n\n  background-color: ${ButtonProps => ButtonProps.isHome? 'var(--rocketseat)' : 'var(--primary)'};\n\n  position: relative;\n  cursor: pointer;  \n\n  transition: border-radius .1s ease-out, background-color .1s ease-out, height .1s ease-out,\n  opacity .1s cubic-bezier(0.075, 0.82, 0.165, 1);  \n\n  ${ButtonProps => ButtonProps.isHome? css`\n    border-radius: 16px;\n  ` : css`\n    border-radius: 50%;\n  `}\n  \n  > img {\n    width: 48px;\n    height: 48px;\n    border-radius: inherit;\n  }\n  \n\n  &::before{\n    ${ButtonProps => ButtonProps.isHome? css`\n    width: 8px;\n    height: 40px;\n    border-radius: 4px;\n  ` : css`\n    width: 9px;\n    height: 9px;\n    border-radius: 50%;\n  `}\n\n    position: absolute;\n    left: -16px;\n\n    background-color: var(--white);    \n\n    content: '';\n    \n\n    transition: border-radius .1s ease-out, \n    background-color .1s ease-out, height .1s ease-out;\n\n    display: ${(props) => ((props.hasNotifications || props.isHome) ? 'inline' : 'none')};\n  }\n\n  &::after{\n    background-color: var(--notification);\n    width: auto;\n    height: 16px;\n\n    padding: 0 4px;\n    position: absolute;\n    bottom: -4px;\n    right: -4px;\n    border-radius: 12px;\n\n    border-radius: 12px;\n    border: 4px solid var(--tertiary);\n\n    text-align: right;\n    font-size: 13px;\n    font-weight: 500;\n    color: var(--white);\n\n    content: '${props => props.mentions && props.mentions}';\n\n    display: ${(props) => props.mentions && props.mentions > 0? 'inline' : 'none'};\n  }\n\n  &.active, &:hover {\n      border-radius: 16px;\n      background-color: ${(ButtonProps) => ButtonProps.isHome? 'var(--rocketseat)' : 'var(--discord)'};    \n\n    ${ButtonProps => (ButtonProps.isHome && !ButtonProps.hasNotifications) ? css`      \n    ` : css`\n      &::before{\n        width: 8px;\n        height: 20px;\n        border-radius: 4px;\n        display: inline;\n      }\n    `}\n  }\n`;\n","import React from 'react';\nimport Logo from '../../assets/logo.svg';\nimport { Button } from './styles';\n\n\nexport interface ButtonProps {\n    selected?: boolean;\n    isHome?: boolean;\n    mentions ?: number;\n    hasNotifications ?: boolean;\n}\n\nconst ServerButton: React.FC<ButtonProps> = ({\n    selected, \n    isHome, \n    mentions,\n    hasNotifications\n}) =>{\n    return (\n        <div>       \n            <Button\n                isHome={isHome}\n                mentions={mentions}\n                className={selected ? 'active' : ''}\n                hasNotifications={hasNotifications}\n            >\n            {isHome && <img src={Logo} alt='logo'/>}  \n            </Button>\n        </div>         \n    );\n};\n\nexport default ServerButton;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  grid-area: SL;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  background-color: var(--tertiary);\n  padding: 11px 0;\n  \n  max-height: 100vh;\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar{\n    display:none;\n  }\n`;\n\nexport const Separator = styled.div`\n    width: 32px;\n    border-bottom: 2px solid var(--quaternary);\n\n    margin-bottom: 8px;\n`; \n","import React from 'react';\nimport ServerButton from '../../components/serverButton'\nimport { Container, Separator } from './styles'\n\nconst ServerList: React.FC = () => {\n    return(\n        <Container>\n          <ServerButton isHome/> \n          <Separator />\n          <ServerButton /> \n          <ServerButton hasNotifications/> \n          <ServerButton mentions={3}/> \n          <ServerButton /> \n          <ServerButton /> \n          <ServerButton /> \n          <ServerButton /> \n          <ServerButton mentions={70}/> \n          <ServerButton /> \n          <ServerButton /> \n          <ServerButton hasNotifications/> \n        </Container>\n    );\n};\n\nexport default ServerList;\n","import styled from 'styled-components';\nimport { ExpandMore } from 'styled-icons/material';\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 11px 0 16px;\n    box-shadow: rgba(0,0,0,0.2) 0px 1px 0px 0px;\n    z-index: 2;\n    background-color: var(--secondary);\n`;\nexport const Title = styled.h1`\n    font-size: 16px;\n    font-weight: bold;\n\n    color: var(--white);\n`;\nexport const ExpandedIcon = styled(ExpandMore)`\n    width: 28px;\n    height: 28px;\n    color: var(--white);\n\n  cursor: pointer;  \n`;\n","import React from 'react';\nimport { Container, Title, ExpandedIcon} from './styles'\n\nconst ServerName: React.FC = () => {\n    return (\n        <Container>\n           <Title>Servidor do Junior</Title>\n           <ExpandedIcon />\n        </Container>\n    );\n};\n\nexport default ServerName;","import styled from 'styled-components';\nimport { Hashtag } from 'styled-icons/heroicons-outline';\n\nexport const Container = styled.div`\n    grid-area: CI;\n    display: flex;\n    align-items: center;\n    padding: 0 17px;\n    background-color: var(--primary);\n    box-shadow: rgba(0,0,0,0.2) 0px 1px 0px 0px;\n    z-index: 2;    \n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n    width: 24px;\n    height: 24px;\n\n    color: var(--symbol);\n`;\n\nexport const Title = styled.h1`\n    margin-left: 9px;\n    font-size: 16px;\n    font-weight: bold;\n    color: var(--white);\n`;\n\nexport const Separator = styled.div`\n    height: 24px;\n    width: 1px;\n    background-color: var(--white);\n    opacity: 0.2;\n    margin: 0 13px;\n`;\n\nexport const Description = styled.span`\n    font-size: 15px;\n    color: var(--gray);\n    font-weight: 500;\n`;","import React from 'react';\nimport { \n    Container, \n    HashtagIcon, \n    Title, \n    Separator, \n    Description \n} from './styles';\n\n\nconst ChannelInfo: React.FC = () => {\n    return (\n       <Container>\n           <HashtagIcon />\n           <Title>chat-livre</Title>\n           <Separator />\n           <Description>Canal aberto para conversas</Description>\n       </Container>\n    );\n};\n\nexport default ChannelInfo;","import styled from 'styled-components';\nimport { Add } from 'styled-icons/material';\n\nexport const Container = styled.div`\n    grid-area: CL;    \n    display: flex;\n    flex-direction: column;\n    background-color: var(--secondary);\n    padding: 24px 9.5px 0 16px;\n`;\n\nexport const Category = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 6px;   \n\n    > span {\n        text-transform: uppercase;\n        font-size: 13px;\n        font-weight: 500;\n        color: var(--gray);\n        cursor: pointer; \n    }\n`;\n\nexport const AddCategoryIcon = styled(Add)`\n   width: 22px;\n   height: 22px;\n\n   color: var(--symbol); \n   cursor: pointer;\n`;\n","import styled from 'styled-components';\nimport { Hashtag } from 'styled-icons/heroicons-outline';\nimport { PersonAdd, Settings } from 'styled-icons/material';\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    cursor: pointer;\n\n    padding: 5px 3px;\n    border-radius: 5px;\n\n    background-color: transparent;\n\n    transition: background-color .2s;\n\n    > div {\n        display: flex;\n        align-items: center;\n    }\n\n    > div span {\n       margin-left: 5px;\n       color: var(--senary); \n    }\n\n    .displayIcons{\n        opacity: 0;\n    }\n\n    &:hover, &.active{\n        background-color: var(--quinary);\n\n        > div span {\n            color: var(--white);\n        }\n\n        .displayIcons{\n            opacity: 1;\n        }\n    }\n`; \n\nexport const HashtagIcon = styled(Hashtag)`\n    width: 20px;\n    height: 20px;\n    color: var(--symbol);\n`; \n\nexport const InvitedIcon = styled(PersonAdd)`\n    width: 16px;\n    height: 16px;\n    color: var(--symbol);\n\n    cursor: pointer;\n\n    transition: color .2s;\n\n    &:hover {\n        color: var(--white);\n    }\n`; \n\nexport const SettingsIcon = styled(Settings)`\n    width: 16px;\n    height: 16px;\n    color: var(--symbol);\n    margin-left: 5px;\n\n    cursor: pointer;\n\n    transition: color .2s;\n\n    &:hover {\n        color: var(--white);\n    }\n`; \n\n","import React from 'react';\n\nimport { Container, HashtagIcon, InvitedIcon, SettingsIcon } from './styles';\n\nexport interface Props{\n    channelName: string;\n    selected?: boolean;\n}\n\nconst ChannelButton: React.FC<Props> = ({\n    channelName, \n    selected\n}) => {\n    return (\n        <Container className={selected ? 'active' : ''}>\n            <div>\n                <HashtagIcon />\n                <span>{channelName}</span>\n            </div>\n            <div className=\"displayIcons\">\n                <InvitedIcon />\n                <SettingsIcon />\n            </div>\n        </Container>        \n    );\n};\n\nexport default ChannelButton;","import React from 'react';\nimport { Container, Category, AddCategoryIcon} from './styles'\nimport ChannelButton from '../channelButton'\n\nconst ChannelList: React.FC = () => {\n    return (\n\n    <Container>\n        <Category>\n            <span>Canais de Texto</span>\n            <AddCategoryIcon />\n        </Category>\n\n\n        <ChannelButton channelName=\"geral\"/>\n        <ChannelButton channelName=\"eventos\"/>\n        <ChannelButton channelName=\"desafios\"/>\n        <ChannelButton channelName=\"scrum\"/>\n        <ChannelButton channelName=\"cotação\"/>\n    </Container> \n    );\n};\n\nexport default ChannelList;","import styled from 'styled-components';\nimport { Mic, Headset, Settings } from 'styled-icons/material'\n\n\nexport const Container = styled.div`\n    grid-area: UI;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    padding: 10px;\n\n    background-color: var(--quaternary);\n\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\n`;\n\nexport const Profile = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n`;\n\nexport const Avatar = styled.div`\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n\n    background-color: var(--gray);\n    cursor: pointer;\n`;\n\nexport const UserData = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-left: 8px;\n    cursor: pointer;\n\n    > strong{\n        font-size: 13px;\n        color: var(--white);\n        display: block;\n    }\n\n    > span {\n        font-size: 13px;\n        color: var(--gray);\n    }\n`;\n\nexport const Icons = styled.div`\n    display: flex;\n    \n    > svg:not(:first-child){\n       margin-left: 7px; \n    }\n`;\n\nexport const MicIcon = styled(Mic)`\n    width: 20px;\n    height: 20px;\n\n    color: var(--white);\n    opacity: .7;\n    cursor: pointer;\n\n    transition: opacity .2s;\n\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport const HeadphoneoIcon = styled(Headset)`\n    width: 20px;\n    height: 20px;\n\n    color: var(--white);\n    opacity: .7;\n    cursor: pointer;\n\n    transition: opacity .2s;\n\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport const SettingIcon = styled(Settings)`\n    width: 20px;\n    height: 20px;\n\n    color: var(--white);\n    opacity: .7;\n    cursor: pointer;\n\n    transition: opacity .2s;\n\n    &:hover {\n        opacity: 1;\n    }\n`;\n","import React from 'react';\nimport { Container, Profile, Avatar, UserData, Icons, MicIcon, HeadphoneoIcon, SettingIcon } from './styles'\n\nconst UserInfo: React.FC = () => {\n    return (\n        <Container>\n            <Profile>\n                <Avatar />\n                <UserData>\n                    <strong>Junior Trojilio</strong>\n                    <span>#7836</span>\n                </UserData>\n            </Profile>\n            <Icons>\n                <MicIcon/>\n                <HeadphoneoIcon />\n                <SettingIcon />\n            </Icons>\n        </Container>\n    );\n};\n\nexport default UserInfo;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  grid-area: UL;\n  display: flex;\n  flex-direction: column;\n  padding: 3px 6px 0 16px;\n  background-color: var(--secondary);\n  max-height: calc(100vh - 46px);\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    width: 4px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }  \n`;\n\nexport const Role = styled.span`\n  margin-top: 20px;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  color: var(--gray);\n`;\n\nexport const User = styled.div`\n  margin-top: 5px;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 4px;\n  background: transparent;\n  transition: background 0.2s;\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n  }\n  > strong {\n    margin-left: 13px;\n    font-weight: 500;\n    color: var(--white);\n    opacity: 0.7;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n  > span {\n    margin-left: 9px;\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 5px;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 11px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  flex-shrink: 0;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: var(--primary);\n  &.bot {\n    background-color: var(--mention-detail);\n  }\n`;","import React from 'react';\nimport { Container, Role, User, Avatar} from './styles'\n\ninterface UserProps {\n    nickName: string;\n    isBot?: boolean;\n}\n\nconst UserRow: React.FC<UserProps> = ({\n    nickName, \n    isBot\n}) => {\n    return (\n        <User>\n            <Avatar className={isBot? 'bot' : ''}/>\n            <strong>{nickName}</strong>\n            {isBot && <span>Bot</span>}\n        </User>\n    );\n};\n\nconst UserList: React.FC = () => {\n    return (\n        <Container>\n            <Role>Disponível - 1</Role>\n            <UserRow nickName=\"Junior Trojilio\"/>\n\n            <Role>OFFLINE - 1</Role>\n            <UserRow nickName=\"King Bot\" isBot/>\n            <UserRow nickName=\"Maria\" />\n            <UserRow nickName=\"John\" />\n            <UserRow nickName=\"Bellamy\" />\n            <UserRow nickName=\"Clarck\" />\n            <UserRow nickName=\"Manu\" />\n            <UserRow nickName=\"Elizeu\" />\n            <UserRow nickName=\"Cadu\" />\n            <UserRow nickName=\"Alessandro\" />\n            <UserRow nickName=\"Catarina\" />\n            <UserRow nickName=\"Garfield\" />\n            <UserRow nickName=\"Juju\" />\n            <UserRow nickName=\"Branquinho\" />\n            <UserRow nickName=\"Lurdes\" />\n            <UserRow nickName=\"Tom\" />\n            <UserRow nickName=\"Jefté\" />\n            <UserRow nickName=\"Konnan o Barbaro\" />\n            <UserRow nickName=\"Senhora\" />\n        </Container>\n    );\n};\n\nexport default UserList;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding: 4px 16px;\n  margin-right: 4px;\n\n  background-color: transparent;\n\n  &.mention {\n    background-color: var(--mention-message);\n\n    border-left: 2px solid var(--mention-detail);\n    padding-left: 14px;\n  }\n\n  & + div {\n    margin-top: 13px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 40px;\n  height: 40px;\n\n  flex-shrink: 0;\n\n  background-color: var(--secondary);\n  border-radius: 50%;\n\n  &.bot {\n    background-color: var(--mention-detail);\n  }\n`;\n\nexport const Message = styled.div`\n  min-height: 40px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  margin-left: 17px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n\n  > strong {\n    color: var(--white);\n    font-size: 16px;\n  }\n\n  > span {\n    margin-left: 6px;\n\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 5px;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 11px;\n  }\n\n  > time {\n    margin-left: 6px;\n    color: var(--gray);\n    font-size: 13px;\n  }\n`;\n\nexport const Content = styled.div`\n  text-align: left;\n  font-size: 16px;\n  color: var(--white);\n`;\n\nexport const Mention = styled.span`\n  color: var(--link);\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;","import React from 'react';\n\nimport { Container, Avatar, Message, Header, Content } from './styles';\nexport { Mention } from './styles';\n\nexport interface Props {\n  author: string;\n  date: string;\n  content: string | React.ReactElement | React.ReactNode;\n  hasMention?: boolean;\n  isBot?: boolean;\n}\n\nconst ChannelMessage: React.FC<Props> = ({\n  author,\n  date,\n  content,\n  hasMention,\n  isBot,\n}) => {\n  return (\n    <Container className={hasMention ? 'mention' : ''}>\n      <Avatar className={isBot ? 'bot' : ''} />\n\n      <Message>\n        <Header>\n          <strong>{author}</strong>\n\n          {isBot && <span>Bot</span>}\n\n          <time>{date}</time>\n        </Header>\n        <Content>{content}</Content>\n      </Message>\n    </Container>\n  );\n};\n\nexport default ChannelMessage;","import styled from 'styled-components';\nimport { AddCircle } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  grid-area: CD;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n`;\n\nexport const Messages = styled.div`\n  padding: 20px 0;\n\n  display: flex;\n  flex-direction: column;\n\n  max-height: calc(100vh - 46px - 68px);\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n\n  padding: 0 16px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 44px;\n\n  padding: 0 10px 0 57px;\n  border-radius: 7px;\n\n  color: var(--white);\n  background-color: var(--chat-input);\n\n  position: relative;\n\n  &::placeholder {\n    color: var(--gray);\n  }\n\n  ~ svg {\n    position: relative;\n    left: 14px;\n    top: -35px;\n    transition: 180ms ease-in-out;\n  }\n`;\n\nexport const InputIcon = styled(AddCircle)`\n  width: 24px;\n  height: 24px;\n\n  color: var(--gray);\n\n  transition: color .1s ease-out;\n\n  cursor: pointer;\n\n  :hover{\n    color: var(--white);\n  }\n`;","import React, { useRef, useEffect } from 'react';\n\nimport ChannelMessage, { Mention } from '../channelMessage';\n\nimport { Container, Messages, InputWrapper, Input, InputIcon } from './styles';\n\nconst ChannelData: React.FC = () => {\n  const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>;\n\n  useEffect(() => {\n    const div = messagesRef.current;\n\n    if (div) {\n      div.scrollTop = div.scrollHeight;\n    }\n  }, [messagesRef]);\n\n  return (\n    <Container>\n      <Messages ref={messagesRef}>\n        {Array.from(Array(15).keys()).map((n) => (\n          <ChannelMessage\n            key={n}\n            author=\"Junior Trojilio\"\n            date=\"17/09/2020\"\n            content=\"Socorram-me subi num onibûs em marrocus!\"\n          />\n        ))}\n\n        <ChannelMessage\n          author=\"King Bot\"\n          date=\"17/09/2020\"\n          content={\n            <>\n              <Mention>@Junior Trojilio</Mention>, Xiuuuuuuuu!\n            </>\n          }\n          hasMention\n          isBot\n        />\n      </Messages>\n\n      <InputWrapper>\n        <Input type=\"text\" placeholder=\"Conversarem #chat-livre\" />\n        <InputIcon />\n      </InputWrapper>\n    </Container>\n  );\n};\n\nexport default ChannelData;","import React from 'react';\n\nimport { Grid } from './styles';\n\nimport ServerList from '../serverList';\nimport ServerName from '../serverName';\nimport ChannelInfo from '../channelInfo';\nimport ChannelList from '../channelList';\nimport UserInfo from '../userInfo';\nimport UserList from '../userList';\nimport ChannelData from '../channelData';\n\nconst Layout: React.FC = () => {\n  return (\n    <Grid>\n      <ServerList />\n      <ServerName />\n      <ChannelInfo />\n      <ChannelList />\n      <UserInfo />\n      <ChannelData />\n      <UserList />\n    </Grid>\n  );\n};\n\nexport default Layout;","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        text-rendering: optimizeLegibility;\n    }\n\n    html, body, #root {\n        height: 100%;\n    }\n\n    *, button, input {\n        border: 0;\n        outline: 0;\n        font-family: 'Roboto', sans-serif;\n    }\n\n    :root {\n    --primary: #36393f;\n    --secondary: #2f3136;\n    --tertiary: rgb(32,34,37);\n    --quaternary: #292b2f;\n    --quinary: #393d42;\n    --senary: #828386;\n \n    --white: #fff;\n    --gray: #8a8c90;\n    --chat-input: rgb(64,68,75);\n    --symbol: #74777a;\n \n    --notification: #f84a4b;\n    --discord: #6e86d6;\n    --mention-detail: #f9a839;\n    --mention-message: #413f3f;\n \n    --link: #5d80d6;\n \n    --rocketseat: #6633cc;\n  }\n`;\n","import React from 'react';\nimport Layout from './components/layout';\nimport GlobalStyles from './styles/globalStyles';\n\nfunction App() {\n  return (       \n        <>\n        <Layout />\n        <GlobalStyles/>  \n        </>      \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}